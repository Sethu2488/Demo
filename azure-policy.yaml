---
apiversion: v1
kind: Deployment
"$schema": https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#
contentVersion: 0.0.0.1
parameters:
  policyType:
    type: string
    metadata:
      description: the type of Policy.
    allowedValues:
    - BuiltIn
    - Custom
    defaultValue: Custom
  location:
    type: string
    defaultValue: eastus2
    metadata:
      description: location for policy assignment
  policyAssignmentName:
    type: string
    metadata:
      description: Name of the Policy Assignment.
  policyDefinitionObject:
    type: object
    metadata:
      description: The JSON of the policy definition Object. Refer to readme.md
variables: {}
functions: []
resources:
- condition: "[equals(parameters('policyType'), 'Custom')]"
  type: Microsoft.Authorization/policyDefinitions
  name: "[parameters('policyDefinitionObject').name]"
  apiVersion: '2018-05-01'
  properties:
    policyType: "[parameters('policyType')]"
    mode: "[parameters('policyDefinitionObject').mode]"
    parameters: "[parameters('policyDefinitionObject').parameters]"
    policyRule: "[parameters('policyDefinitionObject').policyRule]"
- type: Microsoft.Authorization/policyAssignments
  name: "[parameters('policyAssignmentName')]"
---
  apiVersion: 'v1'
  kind: Services
  location: "[parameters('location')]"
  dependsOn:
  - "[resourceId('Microsoft.Authorization/policyDefinitions/', parameters('policyDefinitionObject').name)]"
  identity:
    type: "[if(equals(parameters('policyDefinitionObject').policyRule.then.effect,
      'DeployIfNotExists'),'SystemAssigned', 'None')]"
  properties:
    scope: "[subscription().id]"
    policyDefinitionId: "[resourceId('Microsoft.Authorization/policyDefinitions',
      parameters('policyDefinitionObject').name)]"
outputs: {}
